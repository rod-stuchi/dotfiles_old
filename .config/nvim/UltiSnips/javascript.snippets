snippet tryc "try catch block" b
try {
	${1:${VISUAL:.....}}
} catch (err) {
	console.error('Error at $2 ::', err);
}
endsnippet

snippet if "if block"
if ($1) {
	${0:${VISUAL:implementation here!}}
}
endsnippet

snippet ife "if block else"
if ($1) {
	${2:${VISUAL:implementation here!}}
} else {
	$0
}
endsnippet

snippet /['. ]oid/ "MongoDB ObjectId" r
'`echo " 
	console.log(
		(new Date().getTime() + (~~Math.random() * 9999)).toString(16)
		+ ((~~Math.random() * 9999)).toString(16)
		+ (100 + (~~Math.random() * 99) + new Date().getTime()).toString(16)
	)" | node`'
endsnippet

snippet esli "disable eslint comment" b
/* eslint-disable $1 */
endsnippet

snippet "\/\/eslc" "disable eslint comment next-line" r
// eslint-disable-line
endsnippet

snippet esln "disable eslint comment next-line" b
// eslint-disable-next-line $1
endsnippet

snippet clg "console.log('', x)" b
/* __delete__ */ console.log('$1', $2); // eslint-disable-line
endsnippet

snippet "^imp" "import .. from .." rbA
import $1 from '$2';
endsnippet

snippet "^exdef" "export default" rbA
export default $1;
endsnippet

snippet cfb "const name = () => { }"
const ${1:name} = ($2) => {
	$0
};
endsnippet

snippet cfab "const name = () => { }"
const ${1:name} = async ($2) => {
	$0
};
endsnippet

snippet jsons "JSON.stringify"
JSON.stringify(${1:${VISUAL}}, null, 2)$0
endsnippet
