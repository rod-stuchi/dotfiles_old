"---------------------------SETS--------------------------
"---------------------------------------------------------
  set expandtab
  set textwidth=0
  set tabstop=2
  set shiftwidth=2
  set cursorline
  set cursorcolumn
  set ignorecase
  set smartcase
  set relativenumber number
  set wildignore+=*/tmp/*,*.so,*.swp,*.zip,node_modules
  set foldmethod=indent
  set foldlevel=3
  set nowrap
  "expression to fold '#' comments and empty lines
  "http://vim.1045645.n5.nabble.com/Hide-comments-td1175338.html
  set fde=getline(v:lnum)=~'^\\s*#'?1:getline(prevnonblank(v:lnum))=~'^\\s*#'?1:getline(nextnonblank(v:lnum))=~'^\\s*#'?1:0 
  "autocmd BufRead,BufNewFile   *.zshrc setlocal foldmethod=expr foldexpr=getline(v:lnum)=~'^\s*#'
  "https://vi.stackexchange.com/questions/3512/how-to-fold-comments
  autocmd BufRead,BufNewFile   *.zshrc,*.conf setlocal foldmethod=expr fde foldlevel=0

"-------------------------VimPlug-------------------------
"---------------------------------------------------------
  call plug#begin('~/.local/share/nvim/plugged')
  Plug 'chriskempson/base16-vim'
  Plug 'ctrlpvim/ctrlp.vim'
  Plug 'easymotion/vim-easymotion'
  Plug 'elixir-lang/vim-elixir'
  Plug 'fleischie/vim-styled-components'
  Plug 'junegunn/fzf', { 'dir': '~/.config/fzf', 'do': './install --all' }
  Plug 'junegunn/fzf.vim'
  Plug 'junegunn/vim-easy-align'
  Plug 'justinj/vim-react-snippets'
  Plug 'mattn/emmet-vim'
  Plug 'maxmellon/vim-jsx-pretty'
  Plug 'pangloss/vim-javascript'
  Plug 'ryanoasis/vim-devicons'
  Plug 'scrooloose/nerdtree' ", { 'on': 'NERDTreeToggle' }
  Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
  Plug 'slashmili/alchemist.vim'
  Plug 'tomasr/molokai'
  Plug 'tpope/vim-surround'
  Plug 'vim-airline/vim-airline'
  Plug 'vim-airline/vim-airline-themes'
  Plug 'vim-scripts/Mark--Karkat'
  call plug#end()

"-------------------------FUNCTIONS-----------------------
"---------------------------------------------------------
  set scrolloff=0
  if !exists('*VCenterCursor')
    augroup VCenterCursor
    au!
    au OptionSet *,*.*
      \ if and( expand("<amatch>")=='scrolloff' ,
      \         exists('#VCenterCursor#WinEnter,WinNew,VimResized') )|
      \   au! VCenterCursor WinEnter,WinNew,VimResized|
      \ endif
    augroup END
    function VCenterCursor()
      if !exists('#VCenterCursor#WinEnter,WinNew,VimResized')
        let s:default_scrolloff=&scrolloff
        let &scrolloff=winheight(win_getid())/2
        au VCenterCursor WinEnter,WinNew,VimResized *,*.*
          \ let &scrolloff=winheight(win_getid())/2
      else
        au! VCenterCursor WinEnter,WinNew,VimResized
        let &scrolloff=s:default_scrolloff
      endif
    endfunction
  endif

  set encoding=utf8
  set guifont=Droid\ Sans\ Mono\ for\ Powerline\ Plus\ Nerd\ File\ Types\ 11 
  let g:webdevicons_enable = 1
  let g:webdevicons_enable_nerdtree = 1
  let g:airline_powerline_fonts = 1
  let g:webdevicons_enable_ctrlp = 1
  let g:WebDevIconsUnicodeDecorateFolderNodes = 1
  let g:DevIconsEnableFoldersOpenClose = 1
  let g:DevIconsEnableFolderPatternMatching = 1
 
  let g:airline#extensions#tabline#enabled = 1
  let g:airline_theme='powerlineish'
  let g:airline_powerline_fonts = 1

  let g:deoplete#enable_at_startup = 1
  let g:deoplete#enable_refresh_always = 1

"-------------------------COLOR SCHEME--------------------
"---------------------------------------------------------
  syntax enable
  let base16colorspace=256
  colorscheme base16-atelier-dune
  highlight Normal ctermbg=none
  highlight NonText ctermbg=none


"-------------------------REMAP KEYS----------------------
"---------------------------------------------------------
  map      <C-f>      <Plug>(easymotion-s)
  map      <C-S-f>    <Plug>(easymotion-s2)
  map      <C-n>      :NERDTreeToggle<CR>
  noremap  <Up>       <Nop>
  noremap  <Down>     <Nop>
  noremap  <Left>     <Nop>
  noremap  <Right>    <Nop>
  xmap     ga         <Plug>(EasyAlign)
  nnoremap <leader>zz :call VCenterCursor()<CR>
  "nnoremap j       jzz
  "nnoremap k       kzz
